# -*- coding: utf-8 -*-
"""Analyze employee feedback surveys to identify areas of improvement

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/148BraeRJaG0pPcte-HCktVRt6b0pSYoJ
"""

!kaggle datasets download -d fiodarryzhykau/employee-review

!unzip employee-review.zip

import pandas as pd
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
import string
from textblob import TextBlob
from sklearn.decomposition import LatentDirichletAllocation
from sklearn.feature_extraction.text import CountVectorizer
import matplotlib.pyplot as plt
import re
from collections import Counter
nltk.download('stopwords')
nltk.download('punkt')

data = pd.read_csv("employee_review_mturk_dataset_v10_kaggle.csv")

data.head()

print(data.describe())

print(data.isnull().sum())

# Explore the distribution of categorical variables
print(data['nine_box_category'].value_counts())

# Visualize the distribution of a numerical variable
import matplotlib.pyplot as plt
plt.hist(data['id'])
plt.xlabel('ID')
plt.ylabel('Frequency')
plt.title('Distribution of IDs')
plt.show()

data.head()

# Descriptive Statistics
print(data.describe())

all_txt = ' '.join(data['feedback'].values)
all_txt = re.sub(r'#\S+', '', all_txt)
all_txt = re.sub(r'@\S+', '', all_txt)
all_txt = re.sub(r'http\S+', '', all_txt)
words = all_txt.split()
stop_words = set(stopwords.words('english'))
words = [word for word in words if word.lower() not in stop_words]
word_counts = Counter(words)
top_words = word_counts.most_common(100)
top_words

def preprocessing_text(text):
    text = text.lower()# convert to lowercase
    tokens = word_tokenize(text) # tokenize
    tokens = [word for word in tokens if word not in stopwords.words('english') and word not in string.punctuation]
    processed_text = ' '.join(tokens)
    return processed_text

data['processed_feedbacks'] = data['feedback'].apply(preprocessing_text)

def get_sentiment(text):
    return TextBlob(text).sentiment.polarity

data['sentiment'] = data['processed_feedbacks'].apply(get_sentiment)
print(data[['feedback', 'processed_feedbacks', 'sentiment']].head())